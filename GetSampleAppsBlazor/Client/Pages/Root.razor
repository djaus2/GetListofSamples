@page "/"
@using Services
@inject HttpClient Http
@inject SamplesClient _SamplesClient
<h1>Sample Apps</h1>

<i><b>An Index into the Sample C# Projects </b></i>
<br />
<i><b>Can recurse into folders collecting information about solution, project and C# source files.</b></i>
<br />
<i><b>Can also note image and ReadMe (.md) fiiles</b></i>
<br />
<i><b>See the Index page </b></i>
<br />
<br />
 For example, can use folders from the following GitHub repositories:
<br />
<ul>
    <li>
        <a href="https://github.com/dotnet/iot">dotnet/iot</a>
        <ul>
            <li><a href="https://github.com/djaus2/iot">Alt: djaus2/iot</a></li>
        </ul>
    </li>
    <li><a href="https://github.com/Azure/azure-iot-sdk-csharp">Azure IoT Hub SDK CSharp</a></li>
</ul>.
@if (RootFolder == null)
{
    <p><em>Loading application data,</em></p>
}
else
{
    <h2>About</h2>
    <p><b><i>Have searched the folders under the folder: </i><font color="blue">@RootFolder.FolderName</font></b></p>
    <ul>
        <li><b>Root Tab:</b> This page.</li>
        <li><b>Index Tab: </b>Explore the folders and files in a tree view.</li>
        <li><b>.NET Core proj file Tab:</b> A simple project file for use.</li>
        <li><b>Refresh Tab: </b>Rescan folders-Reload folders from server to client.</li>
        <li><i>In folders can:</i>
            <ul>
            <li>View solution, project, C# from which can copy or download file.</li>
            <li>View Image and ReadMe( .md format) files</li>
            <li>If folder has a solution file can get zip of folder (and sub folders)</li>
            </ul>
        </li>
        <li><i>Also:</i>
        <ul>
            <li><b>Project Tab:</b> Acess from folders that have a .csproj file</li>
            <li>Can view, copy and download individual files from there. Can Zip that folder from there as well.</li>
            <li>Set folder to start scan at in Server appsettings.json</li>
        </ul>
        </li>

    </ul>

}

@code
{
    ProjectClasses.FolderTree RootFolder { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (RootFolder == null)
        {
            var Folders = (await _SamplesClient.Get()).ToList();
            RootFolder = Folders.FirstOrDefault();
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
}
