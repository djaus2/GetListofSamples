@page "/manage"
@using Services
@inject HttpClient Http
@inject SamplesClient _SamplesClient
@inject NavigationManager navigator

<h1>Manage Samples</h1>

@if (RootFolder == null)
{
    <p><em>ReLoading application data from Server to Client</em></p>
    @*<Chase />
        <Circle />
        <CircleFade />
        <Flow />
        <Grid />
        <Plane />
        <Pulse />
        <Swing />
        <Wander />*@
    <Wave />
    @*<Bounce />
        <Fold />*@
}
else
{
    <p><b><i>Have loaded the folders under the folder: </i><font color="blue">@RootFolder.FolderName</font></b></p>
    <ul>
        <li>
            <button class="btn btn-group-lg" @onclick=@Upload><b><font color="purple" size="3">Upload</font> a Samples zip file to Server, and extract.</b></button>&nbsp;
        </li>
        <li>
            <button class="btn btn-toolbar" @onclick=@SelectZip><i>Or ...</i><b><font color="purple" size="3">Select</font> a previously uploaded Samples zip file.</b></button>
        </li>
        <li>
            <button class="btn btn-group-lg" @onclick=@ReloadSvr><b><font color="green" size="3">Switch</font> to Samples folder on Server and re-get app data from Server</b></button>&nbsp;
            <ul>
                <li>See <i>ServerSamplesFolder</i> in appsettings.json in Server code.</li>
                <li>Assumes samples are already there. <i>Use above commands.</i></li>
            </ul>
        </li>
        <li>
            <button class="btn btn-group-lg" @onclick=@ReloadDev><b><font color="green" size="3">Switch</font> to Dev folder and re-get app data from Server</b></button>&nbsp;
            <ul>
                <li>See <i>DevPathToRepository</i> in appsettings.json in Server code.</li>
                <li>Assumes there are samples there.</li>
            </ul>
        </li>
        <li>
            <button class="btn btn-group-lg" @onclick=@ClearZips><b><font color="red" size="3">Clear</font> created (and downloaded) Project Zip Files on Server.</b></button>&nbsp;
            <ul>
                <li>Zip files are created and saved on Server before Download.</li>
                <li><b><i>Nb:</i></b> ZipFolder is specified in <b>appsettings.json on server</b>.</li>
            </ul>
        </li>
        <li>
            <button class="btn btn-group-lg" @onclick=@ClearUploads><b><font color="red" size="3">Clear</font> Uploaded Files (Samples zips) on Server.</b></button>&nbsp;
            <ul>
                <li>A Samples folder, as zip file, is uploaded to here then extracted.</li>
            </ul>
        </li>
        <li>
            <button class="btn btn-group-lg" @onclick=@ClearSamples><b><font color="red" size="3">Clear</font> Samples folder on Server.</b></button>
            <ul>
                <li>Zip files on upload are extracted to here.</li>
            </ul>
        </li>
    </ul>
}

@code
{
    ProjectClasses.FolderTree RootFolder { get; set; } = null;

    List<ProjectClasses.FolderTree> Folders;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (SamplesClient.RootFolder == null)
        {
            Folders = (await _SamplesClient.Get()).ToList();
        }
        RootFolder = SamplesClient.RootFolder;

    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    async Task ClearZips()
    {
        RootFolder = null;
        var result = await _SamplesClient.Delete("downloads");
        RootFolder = new ProjectClasses.FolderTree();
    }
    async Task ClearUploads()
    {
        RootFolder = null;
        var result = await _SamplesClient.Delete("uploads");
        RootFolder = new ProjectClasses.FolderTree();
    }
    async Task ClearSamples()
    {
        RootFolder = null;
        var result = await _SamplesClient.Delete("samples");
        RootFolder = new ProjectClasses.FolderTree();
    }

    async Task ReloadSvr()
    {
        RootFolder = null;
        string param = $"Reload~1~1";
        var Filecontents = await _SamplesClient.GetTextorTextFile(param);
        var Folders = (await _SamplesClient.Get()).ToList();
        RootFolder = Folders.FirstOrDefault();;
    }
    // See Folder Ids in Server/Properties 1 above 0 below
    async Task ReloadDev()
    {
        RootFolder = null;
        string param = $"Reload~0~0";
        var Filecontents = await _SamplesClient.GetTextorTextFile(param);
        var Folders = (await _SamplesClient.Get()).ToList();
        RootFolder = Folders.FirstOrDefault(); ;
    }

    void Upload()
    {
        navigator.NavigateTo("/uploads");
    }

    void SelectZip()
    {
        navigator.NavigateTo("/selectzip");
    }

}
