<!-- ClipBoardComponent.razor -->
@inject IJSRuntime JSRuntime

    <div class="form-inline">

        <br />
        <table style="background-color:beige" border="1" cellpadding="0" cellspacing="0">
            <tr style="border: 0px">
                <td style="border: 0px">
                    <button type="button" class="btn btn-primary" @onclick="CopyTextToClipboard">Copy</button>
                &nbsp;
@if (@UseFileName)
{
     <button type="button" class="btn btn-primary" @onclick="DownloadFile">Download</button><b><i>&nbsp;Filename:&nbsp;</i></b>@Filename
}

                </td>
            </tr>
            <tr style="border: 0px">
                <td style="border: 0px">
                    <pre>@Text</pre>
                </td>
            </tr>
        </table>
    </div>

@code {
    [Parameter] public string Text { get { return dText; } set { dText = value; StateHasChanged(); } }
    [Parameter] public string Filename { get { return dFilename; } set { dFilename = value; StateHasChanged(); } }

    public string dText = "";
    public string dFilename = "";


    bool UseFileName = true;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();


        if (dFilename == "")
            UseFileName = false;
        else
        {
            UseFileName = true;
        }
    }


    private async Task CopyTextToClipboard()
    {
        await JSRuntime.InvokeVoidAsync("clipboardCopy.copyText", Text);
    }

    async Task DownloadFile()
    {
        var bytes = System.Text.Encoding.UTF8.GetBytes(Text);
        await FileUtil.SaveAsText(JSRuntime,Filename, bytes);
    }

    public static class FileUtil
    {
        public async static Task SaveAsText(IJSRuntime js, string filename, byte[] data)
        {
            await js.InvokeAsync<object>(
                "saveAsFile",
                filename,
                Convert.ToBase64String(data));
        }

    }
}
