<!-- ZipComponent.razor -->
@inject IJSRuntime JSRuntime
@inject Services.SamplesClient _SamplesClient
@inject IJSRuntime JSRuntime
@using System.IO

@using Services
<button type="button" class="btn btn-primary" @onclick="DownloadZipFile">Download folder ZIP</button>
@code {
    [Parameter]
    public int FolderId { get; set; }

    public string showFilename { get; set; } = "";

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        ProjectClasses.FolderTree Folder = SamplesClient.FolderDict[FolderId];

        showFilename = $"{Folder.FolderName}.zip";
    }


    // Ref: https://docs.microsoft.com/en-us/dotnet/api/system.convert.tobase64string?view=netcore-3.1
    // Look for example under ToBase64(Byte[], Base64FormattingOPetion)
    // It does a Convert.ToBase64String followed by Covert.FromBas64String
    // Note: No data type strings as used with images

    async Task DownloadZipFile()
    {
        string Text = showFilename;
        string param = $"{showFilename}~{FolderId}";
        string Filecontents = await _SamplesClient.GetFile(param);
        byte[] bytes = Convert.FromBase64String(Filecontents);
        await FileUtil.SaveAs(JSRuntime, showFilename, bytes);
    }


}
