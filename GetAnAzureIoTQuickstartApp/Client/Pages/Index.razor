@page "/index"
@using GetAnAzureIoTQuickstartApp.Shared
@using ProjectClasses
@inject HttpClient Http
@inject Services.SamplesClient _SamplesClient
@inject NavigationManager navigationManager
@using  GetAnAzureIoTQuickstartApp.Client.Services;

<h1>dotnet/iot Sample Apps</h1>
<h2>Index</h2>

<i><b>An Index into the Device Sample projects in dotnet/iot (and the mirror djaus2/iot) on GitHub:</b></i>
<ul>
    <li><a href="https://github.com/dotnet/iot">dotnet/iot</a></li>
    <li><a href="https://github.com/djaus2/iot">djaus2/iot</a></li>
</ul>
<br />
@if (RootFolder == null)
{
    <p><em>Loading...</em></p>
}
else
{
<table>
    @*<tr><td>@RootFolder.Children.Count</td><td>@RootFolder.Projects.Count</td><td>@RootFolder.FolderName</td></tr>*@
    @foreach (int f in RootFolder.Children)
    {
        FolderTree folder = FolderDict[f];
        <tr><td>@folder.Children.Count</td><td>@folder.Projects.Count</td><td>.</td><td>@folder.FolderName</td><td>.</td><td>.</td><td>.</td></tr>
        @if (folder.Projects.Count > 0)
        {
            @foreach (int f1p in folder.Projects)
            {
                <tr>
                    <td>.</td>
                    <td>.</td>
                    <td>.</td>
                    <td>.</td>
                    <td>@f1p</td>
                </tr>
            }
        }
        @foreach (int f2 in folder.Children)
        {
            FolderTree folder2 = FolderDict[f2];
            <tr>
                <td>@folder2.Children.Count</td>
                <td>@folder2.Projects.Count</td>
                <td>.</td>
                <td>.</td>
                @if (folder2.Projects.Count > 0)
                {
                    <td><b><font color="blue">@folder2.FolderName</font></b></td>
                }
                else
                {
                    <td>@folder2.FolderName</td>
                }
            </tr>
            @if (folder2.Projects.Count > 0)
            {
                @foreach (int f2p in folder2.Projects)
                {
<tr>
    <td>.</td>
    <td>.</td>
    <td>.</td>
    <td>.</td>
    <td>@f2p</td>
</tr>
                }
            }

            @foreach (int f3 in folder2.Children)
            {
                FolderTree folder3 = FolderDict[f3];
                <tr>
                    <td>@folder3.Children.Count</td>
                    <td>@folder3.Projects.Count</td>
                    <td>.</td>
                    <td>.</td>
                    <td>.</td>
                    @if (folder3.Projects.Count > 0)
                    {
                        <td><b><font color="blue">@folder3.FolderName</font></b></td>
                    }
                    else
                    {
                        <td>@folder3.FolderName</td>
                    }
                </tr>
                @if (folder3.Projects.Count > 0)
                {
                    @foreach (int f3p in folder3.Projects)
                    {
<tr>
    <td>.</td>
    <td>.</td>
    <td>.</td>
    <td>.</td>
    <td>.</td>
    <td>@f3p</td>
</tr>
                    }
                }
                @foreach (int f4 in folder3.Children)
                {
                    FolderTree folder4 = FolderDict[f4];
                    <tr>
                        <td>@folder4.Children.Count</td>
                        <td>@folder4.Projects.Count</td>
                        <td>.</td>
                        <td>.</td>
                        <td>.</td>
                        <td>.</td>
                        @if (folder4.Projects.Count > 0)
                        {
                            <td><b><font color="blue">@folder4.FolderName</font></b></td>
                        }
                        else
                        {
                            <td>@folder4.FolderName</td>
                        }
                    </tr>
                    @if (folder4.Projects.Count > 0)
                    {
                        @foreach (int f4p in folder4.Projects)
                        {
                            <tr>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>@f4p</td>
                            </tr>
                        }
                    }
                    @foreach (int f5 in folder4.Children)
                    {
                        FolderTree folder5 = FolderDict[f5];
                        <tr>
                            <td>@folder5.Children.Count</td>
                            <td>@folder5.Projects.Count</td>
                            <td>.</td>
                            <td>.</td>
                            <td>.</td>
                            <td>.</td>
                            <td>.</td>
                            @if (folder5.Projects.Count > 0)
                            {

                                <td><b><font color="blue">@folder5.FolderName</font></b></td>
                            }
                            else
                            {
                                <td>@folder5.FolderName</td>
                            }
                        </tr>
                        @if (folder5.Projects.Count > 0)
                        {
                            @foreach (int f5p in folder5.Projects)
                            {
                                <tr>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>.</td>
                                    <td>@f5p</td>
                                </tr>
                            }
                        }
                        @foreach (int f6 in folder5.Children)
                        {
                            FolderTree folder6 = FolderDict[f6];
                            <tr>
                                <td>@folder6.Children.Count</td>
                                <td>@folder6.Projects.Count</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                <td>.</td>
                                @if (folder6.Projects.Count > 0)
                                {
                                    <td><b><font color="blue">@folder6.FolderName</font></b></td>
                                }
                                else
                                {
                                    <td>@folder6.FolderName</td>
                                }
                            </tr>
                            @if (folder6.Projects.Count > 0)
                            {
                                @foreach (int f6p in folder6.Projects)
                                {
                                    <tr>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>.</td>
                                        <td>@f6p</td>
                                    </tr>
                                }
                            }
                        }
                    }
                }
            }
        }
    }
</table>
}

@code {


    private List<FolderTree> Folders;
    private Project[] Projects;
    private FolderTree RootFolder = null;
    public Dictionary<int, FolderTree> FolderDict { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Folders = (await _SamplesClient.Get()).ToList();
        //Projects = _SamplesClient.Projects;
        RootFolder = _SamplesClient.RootFolder;
        FolderDict = _SamplesClient.FolderDict;
    }
    /*
        void SampleMe(char key)
        {
            bool done = false;
            AlphaViz[key] = true;
            if (AlphaViz.Keys.Contains(GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentIndex))
            {
                if (key == GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentIndex)
                    done = true;
                AlphaViz[GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentIndex] = false;
                GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentIndex = '=';
                GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentProject = null;
            }
            if (!done)
            {
                if (AlphaViz.Keys.Contains(key))
                {
                    GetAnAzureIoTQuickstartApp.Client.Services.SamplesClient.CurrentIndex = key;
                    AlphaViz[key] = true;
                }
            }
            StateHasChanged();
        }*/

    void SampleMe2(string device, string projectName)
    {
        string target = $"/device/{device}-{projectName}";

        navigationManager.NavigateTo(target);
    }
}

